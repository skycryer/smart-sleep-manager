<?xml version='1.0' standalone='yes'?>
<!DOCTYPE PLUGIN [
<!ENTITY name "smart.sleep.manager">
<!ENTITY displayname "Smart Sleep Manager">
<!ENTITY author "SkyCryer">
<!ENTITY version "2025.10.09.22">
<!ENTITY launch "Settings/SmartSleepSettings">
<!ENTITY gitURL "https://github.com/skycryer/smart-sleep-manager/raw/main">
<!ENTITY pluginURL "&gitURL;/smart.sleep.manager.plg">
]>

<PLUGIN name="&name;" displayname="&displayname;" author="&author;" version="&version;" launch="&launch;" pluginURL="&pluginURL;" min="6.12.0">

<!--
PLUGIN DESCRIPTION
Smart Sleep Manager

Automated sleep management for your Unraid server with intelligent monitoring and Telegram notifications. Monitors disk activity and network traffic to determine when it's safe to put the server to sleep. Includes configurable idle timers, disk monitoring, and Wake-on-LAN support for seamless operation.

Features:
• Intelligent disk activity monitoring
• Network traffic monitoring
• Telegram notifications for sleep events
• Wake-on-LAN support with automatic configuration
• Configurable idle timers and thresholds
• Compatible with Dynamix S3 sleep
• Web-based configuration interface
-->

<CHANGES>
###2025.10.09.22
- Added cURL-based telegram test matching working sleepy.sh approach
- Created test_telegram_curl.php using cURL instead of file_get_contents
- Added "Test Telegram cURL" button to isolate HTTP method differences
- May resolve SSL/TLS, User-Agent, or firewall issues with file_get_contents
- Provides comprehensive debugging: minimal POST, cURL, and original methods

###2025.10.09.21
- Added minimal telegram test for debugging empty response issue
- Created test_telegram_minimal.php to isolate POST data handling
- Added "Test Telegram Minimal" button for step-by-step debugging
- Enhanced debugging capabilities to identify telegram test failures
- All basic tests (System Debug, PHP Test, Simple Test) confirmed working

###2025.10.09.20
- Fixed plugin display name showing as 'Smart Sleep Manager' instead of internal ID
- Improved plugin description formatting for better visibility in plugin manager
- Enhanced XML structure with proper commenting for description
- Added comprehensive feature list in plugin description

###2025.10.09.19  
- Fixed disk selection not showing all pre-selected disks
- Enhanced default.cfg with monitor_disks field for proper initialization
- Improved backwards compatibility logic for config migration
- Auto-select array disks on first-time setup for better user experience
- Added comprehensive debug logging for disk selection troubleshooting
- Created test_simple.php for ultra-basic PHP response validation
- Added "Test Simple" button to isolate telegram JSON response issues

###2025.10.09.18
- Restored dropdownchecklist plugin functionality with checkbox interface
- Fixed disk selection dropdown with proper pre-selection and count display  
- Enhanced fallback support for systems without dropdownchecklist plugin
- Completely rewrote test_telegram.php with clean output buffer management
- Fixed JSON response formatting and POST data handling
- Added comprehensive input validation and better error messages

###2025.10.09.17
- Fixed disk monitoring dropdown: Changed to monitor_disks[] for proper multi-select
- Fixed Telegram test empty response: Cleaned output buffer management
- Simplified JavaScript dropdown without external plugin dependencies
- Enhanced multi-select UI with selected disk count display
- Updated configuration handling for array inputs

###2025.10.09.16
- Fixed gitignore patterns blocking debug_system.php deployment
- Restored comprehensive debug tools for troubleshooting
- Refined gitignore to exclude only output/temp files, not essential tools

###2025.10.09.12
- Final fix: Removed duplicate content from .plg file
- Cleaned XML structure completely
- Ready for stable installation

###2025.10.09.11
- Emergency fix: Repaired corrupted .plg file
- Fixed test_basic.php download URL issue  
- Cleaned XML structure from text contamination

###2025.10.09.10
- Updated author to SkyCryer
- Enhanced Telegram test debugging
- Added comprehensive error logging
- Improved plugin description and display name

###2025.10.09
- Major UI simplification: Single "Disks to Monitor" dropdown
- Removed confusing "Array Disks" + "Ignore Disks" split
- Enhanced dropdown selection logic with proper pre-selection
- Backward compatibility with existing configs
- Fixed JavaScript structure and validation
- Improved Telegram test error handling
</CHANGES>

<FILE Run="/bin/bash">
<INLINE>
echo "Installing Smart Sleep Manager..."
rm -rf /usr/local/emhttp/plugins/smart.sleep.manager
mkdir -p /usr/local/emhttp/plugins/smart.sleep.manager/include
mkdir -p /usr/local/emhttp/plugins/smart.sleep.manager/scripts
mkdir -p /usr/local/emhttp/plugins/smart.sleep.manager/icons
mkdir -p /usr/local/emhttp/plugins/smart.sleep.manager/images
mkdir -p /boot/config/plugins/smart.sleep.manager
echo "Plugin directories created"
</INLINE>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/smart.sleep.manager/default.cfg">
<URL>&gitURL;/default.cfg</URL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/smart.sleep.manager/SmartSleepSettings.page">
<URL>&gitURL;/SmartSleepSettings.page</URL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/smart.sleep.manager/SleepManager.php">
<URL>&gitURL;/SleepManager.php</URL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/smart.sleep.manager/include/update.sleep.php">
<URL>&gitURL;/include/update.sleep.php</URL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/smart.sleep.manager/include/SleepMode.php">
<URL>&gitURL;/include/SleepMode.php</URL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/smart.sleep.manager/include/test_telegram.php">
<URL>&gitURL;/include/test_telegram.php</URL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/smart.sleep.manager/include/test_telegram_minimal.php">
<URL>&gitURL;/include/test_telegram_minimal.php</URL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/smart.sleep.manager/include/test_telegram_curl.php">
<URL>&gitURL;/include/test_telegram_curl.php</URL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/smart.sleep.manager/include/test_basic.php">
<URL>&gitURL;/include/test_basic.php</URL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/smart.sleep.manager/include/test_simple.php">
<URL>&gitURL;/include/test_simple.php</URL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/smart.sleep.manager/include/debug_system.php">
<URL>&gitURL;/include/debug_system.php</URL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/smart.sleep.manager/scripts/smart_sleep.sh" Mode="0755">
<URL>&gitURL;/scripts/smart_sleep.sh</URL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/smart.sleep.manager/scripts/preRun" Mode="0755">
<URL>&gitURL;/scripts/preRun</URL>
</FILE>

<FILE Name="/usr/local/emhttp/plugins/smart.sleep.manager/scripts/postRun" Mode="0755">
<URL>&gitURL;/scripts/postRun</URL>
</FILE>

<FILE Run="/bin/bash">
<INLINE>
echo "Configuring Smart Sleep Manager..."
if [ ! -f /boot/config/plugins/smart.sleep.manager/smart.sleep.manager.cfg ]; then
  cp /usr/local/emhttp/plugins/smart.sleep.manager/default.cfg /boot/config/plugins/smart.sleep.manager/smart.sleep.manager.cfg
  echo "Default configuration copied"
fi
chmod +x /usr/local/emhttp/plugins/smart.sleep.manager/scripts/smart_sleep.sh 2>/dev/null
chmod +x /usr/local/emhttp/plugins/smart.sleep.manager/scripts/preRun 2>/dev/null
chmod +x /usr/local/emhttp/plugins/smart.sleep.manager/scripts/postRun 2>/dev/null
echo "Permissions set"
CRONLINE="*/5 * * * * /usr/local/emhttp/plugins/smart.sleep.manager/scripts/smart_sleep.sh >/dev/null"
if ! crontab -l 2>/dev/null | grep -q "smart_sleep.sh"; then
  (crontab -l 2>/dev/null; echo "$CRONLINE") | crontab -
  echo "Cron job installed"
fi
echo "Smart Sleep Manager installed successfully!"
</INLINE>
</FILE>

<FILE Run="/bin/bash" Method="remove">
<INLINE>
echo "Removing Smart Sleep Manager..."
crontab -l 2>/dev/null | grep -v "smart_sleep.sh" | crontab - 2>/dev/null
rm -rf /usr/local/emhttp/plugins/smart.sleep.manager
echo "Smart Sleep Manager removed successfully!"
</INLINE>
</FILE>

</PLUGIN>
